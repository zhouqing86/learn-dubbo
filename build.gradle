buildscript {
	ext {
		springBootVersion = '2.0.0.BUILD-SNAPSHOT'
	}
	repositories {
//		mavenCentral()
		mavenLocal()
		maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


allprojects {
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
}

subprojects {
    apply plugin: 'java'

    // In this section you declare where to find the dependencies of your project
    repositories {
        mavenCentral()
	      mavenLocal()
	      maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    }

    ext {
      slf4jVersion = '1.7.24'
      junitVersion = '4.12'
      springBootVersion = '1.5.7.RELEASE'
      dubboVersion = '2.5.5'
      mysqlConnectorVersion = '5.1.44'
  	}

    // In this section you declare the dependencies for your production and test code
    dependencies {
        // The production code uses the SLF4J logging API at compile time
        compile "org.slf4j:slf4j-api:${slf4jVersion}"
        compile("org.springframework.boot:spring-boot-starter-parent:${springBootVersion}")
        compile("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
        compile("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
        compile("org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}")
        compile("com.alibaba:dubbo:${dubboVersion}")
        runtime("mysql:mysql-connector-java:${mysqlConnectorVersion}")
        runtime('com.h2database:h2:1.4.196')

        // Declare the dependency for your favourite test framework you want to use in your tests.
        // TestNG is also supported by the Gradle Test task. Just change the
        // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
        // 'test.useTestNG()' to your build script.
        testCompile "junit:junit:${junitVersion}"
    }
}

project(':dubbo-demo-consumer') {
    dependencies {
        compile project(':dubbo-demo-api')
    }
}

project(':dubbo-demo-provider') {
    dependencies {
        compile project(':dubbo-demo-api')
    }
}